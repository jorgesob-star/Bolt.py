import streamlit as st
import matplotlib.pyplot as plt
import numpy as np

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Calculadora TVDE Semanal",
    page_icon="üöó",
    layout="centered"
)

# T√≠tulo da aplica√ß√£o
st.title("üöó Calculadora de Ganhos Semanais TVDE")
st.markdown("Calcule seus rendimentos l√≠quidos semanais como motorista TVDE")

# Inicializar vari√°veis de sess√£o
if 'comissao_plataforma' not in st.session_state:
    st.session_state.comissao_plataforma = 6.0
if 'show_advanced' not in st.session_state:
    st.session_state.show_advanced = False

# Fun√ß√£o para alternar a visualiza√ß√£o das configura√ß√µes avan√ßadas
def toggle_advanced():
    st.session_state.show_advanced = not st.session_state.show_advanced

# Bot√£o para mostrar/ocultar configura√ß√µes avan√ßadas
st.button(
    "‚öôÔ∏è Configura√ß√µes Avan√ßadas" if not st.session_state.show_advanced else "‚¨ÜÔ∏è Ocultar Configura√ß√µes",
    on_click=toggle_advanced
)

# Mostrar configura√ß√µes avan√ßadas se o bot√£o foi clicado
if st.session_state.show_advanced:
    with st.expander("Configura√ß√µes Avan√ßadas", expanded=True):
        st.session_state.comissao_plataforma = st.number_input(
            "Comiss√£o da Plataforma (%)", 
            min_value=0.0, max_value=100.0, 
            value=st.session_state.comissao_plataforma, step=0.5,
            key="comissao_input"
        )

# Entradas principais do usu√°rio
st.header("Entradas Semanais")

# Valores iniciais conforme solicitado
apuro_semanal = 700.0
aluguer_semanal = 270.0
combustivel_semanal = 150.0

col1, col2 = st.columns(2)

with col1:
    dias_trabalhados = st.slider("Dias trabalhados na semana", 1, 7, 5)
    ganhos_brutos_semana = st.number_input(
        "Ganhos Brutos Semanais (‚Ç¨)", 
        min_value=0.0, 
        value=apuro_semanal, 
        step=10.0,
        help="Total de ganhos brutos na semana (apuro)"
    )

with col2:
    custo_gasolina_semana = st.number_input(
        "Custo com Gasolina Semanal (‚Ç¨)", 
        min_value=0.0, 
        value=combustivel_semanal, 
        step=10.0
    )
    aluguer_semana = st.number_input(
        "Aluguer Semanal da Viatura (‚Ç¨)", 
        min_value=0.0, 
        value=aluguer_semanal, 
        step=10.0
    )
    outros_custos = st.number_input(
        "Outros Custos Semanais (‚Ç¨)", 
        min_value=0.0, 
        value=0.0, 
        step=5.0,
        help="Lavagens, portagens, estacionamento, etc."
    )

# C√°lculos
comissao_valor_semana = ganhos_brutos_semana * (st.session_state.comissao_plataforma / 100)

ganhos_liquidos_semana = (ganhos_brutos_semana - comissao_valor_semana - 
                         custo_gasolina_semana - aluguer_semana - outros_custos)

margem_lucro = (ganhos_liquidos_semana / ganhos_brutos_semana) * 100 if ganhos_brutos_semana > 0 else 0

# Exibir resultados
st.header("Resultados Semanais")

col1, col2, col3 = st.columns(3)
col1.metric("Ganhos L√≠quidos Semanais", f"‚Ç¨{ganhos_liquidos_semana:.2f}")
col2.metric("Comiss√£o Plataforma", f"‚Ç¨{comissao_valor_semana:.2f}")
col3.metric("Margem de Lucro", f"{margem_lucro:.1f}%")

# Visualiza√ß√£o gr√°fica
st.subheader("Distribui√ß√£o dos Custos e Ganhos")

# Preparar dados para o gr√°fico
categorias = ['Ganhos L√≠quidos', 'Comiss√£o Plataforma', 'Gasolina', 'Aluguer Viatura', 'Outros Custos']
valores = [
    max(ganhos_liquidos_semana, 0), 
    comissao_valor_semana, 
    custo_gasolina_semana, 
    aluguer_semana, 
    outros_custos
]
cores = ['#2ecc71', '#e74c3c', '#f39c12', '#3498db', '#9b59b6']

# Criar gr√°fico
fig, ax = plt.subplots(figsize=(10, 6))
bars = ax.bar(categorias, valores, color=cores)
ax.set_ylabel('Valores (‚Ç¨)')
ax.set_title('Distribui√ß√£o Semanal de Custos e Ganhos')

# Adicionar valores nas barras
for bar, valor in zip(bars, valores):
    height = bar.get_height()
    ax.text(bar.get_x() + bar.get_width()/2., height + 5,
            f'‚Ç¨{valor:.2f}', ha='center', va='bottom')

plt.xticks(rotation=45)
st.pyplot(fig)

# Detalhamento dos c√°lculos
with st.expander("üìä Ver detalhamento dos c√°lculos"):
    st.subheader("Detalhamento Semanal")
    st.write(f"**Ganhos brutos semanais (apuro):** ‚Ç¨{ganhos_brutos_semana:.2f}")
    st.write(f"**Comiss√£o da plataforma ({st.session_state.comissao_plataforma}%):** ‚Ç¨{comissao_valor_semana:.2f}")
    st.write(f"**Custo com gasolina semanal:** ‚Ç¨{custo_gasolina_semana:.2f}")
    st.write(f"**Aluguer da viatura semanal:** ‚Ç¨{aluguer_semana:.2f}")
    st.write(f"**Outros custos:** ‚Ç¨{outros_custos:.2f}")
    st.write(f"**Ganhos l√≠quidos semanais:** ‚Ç¨{ganhos_brutos_semana:.2f} - ‚Ç¨{comissao_valor_semana:.2f} - ‚Ç¨{custo_gasolina_semana:.2f} - ‚Ç¨{aluguer_semana:.2f} - ‚Ç¨{outros_custos:.2f} = ‚Ç¨{ganhos_liquidos_semana:.2f}")
    
    # C√°lculo di√°rio
    st.subheader("M√©dias Di√°rias")
    st.write(f"**Ganhos brutos di√°rios:** ‚Ç¨{ganhos_brutos_semana/dias_trabalhados:.2f}")
    st.write(f"**Ganhos l√≠quidos di√°rios:** ‚Ç¨{ganhos_liquidos_semana/dias_trabalhados:.2f}")

# Proje√ß√£o mensal
st.header("üìà Proje√ß√£o Mensal")
dias_uteis_mes = st.slider("Dias √∫teis no m√™s", 20, 31, 22)
semanas_mes = dias_uteis_mes / dias_trabalhados
ganhos_mensais = ganhos_liquidos_semana * semanas_mes

col1, col2 = st.columns(2)
col1.metric("Proje√ß√£o de Ganhos Mensais", f"‚Ç¨{ganhos_mensais:.2f}")
col2.metric("M√©dia Di√°ria L√≠quida", f"‚Ç¨{ganhos_liquidos_semana/dias_trabalhados:.2f}")

# Resumo final
st.header("üí∂ Resumo Financeiro")
resumo_col1, resumo_col2, resumo_col3 = st.columns(3)
resumo_col1.metric("Apuro Semanal", f"‚Ç¨{ganhos_brutos_semana:.2f}")
resumo_col2.metric("Custos Semanais", f"‚Ç¨{(comissao_valor_semana + custo_gasolina_semana + aluguer_semana + outros_custos):.2f}")
resumo_col3.metric("Lucro Semanal", f"‚Ç¨{ganhos_liquidos_semana:.2f}", 
                  delta=f"{margem_lucro:.1f}%")

# Rodap√©
st.markdown("---")
st.caption("App desenvolvido para c√°lculo de ganhos no TVDE. Considere outros custos n√£o inclu√≠dos aqui como manuten√ß√£o, seguros, etc.")
