import streamlit as st

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Calculadora TVDE",
    page_icon="üöó",
    layout="centered"
)

# T√≠tulo da aplica√ß√£o
st.title("üöó Calculadora de Ganhos TVDE")
st.markdown("Calcule seus rendimentos l√≠quidos como motorista TVDE")

# Inicializar vari√°veis de sess√£o para manter os valores
if 'comissao_plataforma' not in st.session_state:
    st.session_state.comissao_plataforma = 6.0
if 'aluguer_viatura' not in st.session_state:
    st.session_state.aluguer_viatura = 30.0
if 'show_advanced' not in st.session_state:
    st.session_state.show_advanced = False

# Fun√ß√£o para alternar a visualiza√ß√£o das configura√ß√µes avan√ßadas
def toggle_advanced():
    st.session_state.show_advanced = not st.session_state.show_advanced

# Bot√£o para mostrar/ocultar configura√ß√µes avan√ßadas
st.button(
    "‚öôÔ∏è Configura√ß√µes Avan√ßadas" if not st.session_state.show_advanced else "‚¨ÜÔ∏è Ocultar Configura√ß√µes",
    on_click=toggle_advanced
)

# Mostrar configura√ß√µes avan√ßadas se o bot√£o foi clicado
if st.session_state.show_advanced:
    with st.expander("Configura√ß√µes Avan√ßadas", expanded=True):
        st.session_state.comissao_plataforma = st.number_input(
            "Comiss√£o da Plataforma (%)", 
            min_value=0.0, max_value=100.0, 
            value=st.session_state.comissao_plataforma, step=0.5,
            key="comissao_input"
        )
        st.session_state.aluguer_viatura = st.number_input(
            "Aluguer da Viatura (‚Ç¨)", 
            min_value=0.0, value=st.session_state.aluguer_viatura, step=5.0,
            key="aluguer_input"
        )

# Entradas principais do usu√°rio
st.header("Entradas")
col1, col2 = st.columns(2)

with col1:
    ganhos_brutos = st.number_input("Ganhos Brutos (‚Ç¨)", min_value=0.0, value=100.0, step=10.0)

with col2:
    custo_gasolina = st.number_input("Custo com Gasolina (‚Ç¨)", min_value=0.0, value=20.0, step=5.0)

# C√°lculos
comissao_valor = ganhos_brutos * (st.session_state.comissao_plataforma / 100)
ganhos_liquidos = ganhos_brutos - comissao_valor - custo_gasolina - st.session_state.aluguer_viatura
margem_lucro = (ganhos_liquidos / ganhos_brutos) * 100 if ganhos_brutos > 0 else 0

# Exibir resultados
st.header("Resultados")

col1, col2, col3 = st.columns(3)
col1.metric("Ganhos L√≠quidos", f"‚Ç¨{ganhos_liquidos:.2f}")
col2.metric("Comiss√£o Plataforma", f"‚Ç¨{comissao_valor:.2f} ({st.session_state.comissao_plataforma}%)")
col3.metric("Margem de Lucro", f"{margem_lucro:.1f}%")

# Visualiza√ß√£o simplificada
st.subheader("Distribui√ß√£o dos Valores")

# Criar gr√°fico de barras simples
valores = [ganhos_liquidos, comissao_valor, custo_gasolina, st.session_state.aluguer_viatura]
categorias = ['Ganhos L√≠quidos', 'Comiss√£o Plataforma', 'Gasolina', 'Aluguer Viatura']

data = {"Categorias": categorias, "Valores (‚Ç¨)": valores}
st.bar_chart(data, x="Categorias", y="Valores (‚Ç¨)")

# Detalhamento dos c√°lculos
with st.expander("Ver detalhamento dos c√°lculos"):
    st.write(f"**Ganhos brutos:** ‚Ç¨{ganhos_brutos:.2f}")
    st.write(f"**Comiss√£o da plataforma ({st.session_state.comissao_plataforma}%):** ‚Ç¨{comissao_valor:.2f}")
    st.write(f"**Custo com gasolina:** ‚Ç¨{custo_gasolina:.2f}")
    st.write(f"**Aluguer da viatura:** ‚Ç¨{st.session_state.aluguer_viatura:.2f}")
    st.write(f"**Ganhos l√≠quidos:** ‚Ç¨{ganhos_brutos:.2f} - ‚Ç¨{comissao_valor:.2f} - ‚Ç¨{custo_gasolina:.2f} - ‚Ç¨{st.session_state.aluguer_viatura:.2f} = ‚Ç¨{ganhos_liquidos:.2f}")

# Adicionar se√ß√£o para m√∫ltiplos dias
st.header("üìÖ C√°lculo para M√∫ltiplos Dias")
dias_trabalhados = st.slider("N√∫mero de dias trabalhados", 1, 30, 1)
ganhos_totais = ganhos_liquidos * dias_trabalhados

st.metric(f"Ganhos l√≠quidos para {dias_trabalhados} dias", f"‚Ç¨{ganhos_totais:.2f}")

# Rodap√©
st.markdown("---")
st.caption("App desenvolvido para c√°lculo de ganhos no TVDE. Considere outros custos n√£o inclu√≠dos aqui como manuten√ß√£o, seguros, etc.")
